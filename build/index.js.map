{"version":3,"sources":["../src/index.js"],"names":["app","router","express","Router","use","bodyParser","json","mongoose","connect","process","env","MONGODB_URI","useNewUrlParser","connection","once","console","log","route","post","req","res","issue","Issue","body","save","then","status","catch","err","send","get","find","issues","findById","params","id","next","Error","title","responsible","description","severity","findByIdAndRemove","_id","listen","PORT"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\nimport Issue from '../build/Issue';\r\n\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\nmongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost/issues', { useNewUrlParser: true });\r\n\r\nconst connection = mongoose.connection;\r\n\r\nconnection.once('open', () => {\r\n    console.log('MongoDB database connection established successfully!');\r\n});\r\n\r\nrouter.route('/issues/add').post((req, res) => {\r\n    let issue = new Issue(req.body);\r\n    issue.save()\r\n        .then(issue => {\r\n            res.status(200).json({'issue': 'Added successfully'});\r\n        })\r\n        .catch(err => {\r\n            res.status(400).send('Failed to create new record');\r\n        });\r\n});\r\n\r\nrouter.route('/issues').get((req, res) => {\r\n    Issue.find((err, issues) => {\r\n        if (err)\r\n            console.log(err);\r\n        else\r\n            res.json(issues);\r\n    });\r\n});\r\n\r\nrouter.route('/issues/:id').get((req, res) => {\r\n    Issue.findById(req.params.id, (err, issue) => {\r\n        if (err)\r\n            console.log(err);\r\n        else\r\n            res.json(issue);\r\n    })\r\n});\r\n\r\nrouter.route('/issues/update/:id').post((req, res) => {\r\n    Issue.findById(req.params.id, (err, issue) => {\r\n        if (!issue)\r\n            return next(new Error('Could not load Document'));\r\n        else {\r\n            issue.title = req.body.title;\r\n            issue.responsible = req.body.responsible;\r\n            issue.description = req.body.description;\r\n            issue.severity = req.body.severity;\r\n            issue.status = req.body.status;\r\n\r\n            issue.save().then(issue => {\r\n                res.json('Update done');\r\n            }).catch(err => {\r\n                res.status(400).send('Update failed');\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\nrouter.route('/issues/delete/:id').get((req, res) => {\r\n    Issue.findByIdAndRemove({_id: req.params.id}, (err, issue) => {\r\n        if (err)\r\n            res.json(err);\r\n        else\r\n            res.json('Removed successfully');\r\n    });\r\n});\r\n\r\napp.use('/', router);\r\n\r\napp.listen(process.env.PORT ||4000, () => console.log(`Express server running on port 4000`));"],"file":"index.js"}